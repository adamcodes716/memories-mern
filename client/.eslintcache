[{"C:\\Users\\Adam\\workspace\\training\\memories-mern\\client\\src\\App.js":"1","C:\\Users\\Adam\\workspace\\training\\memories-mern\\client\\src\\components\\Form\\Form.js":"2","C:\\Users\\Adam\\workspace\\training\\memories-mern\\client\\src\\components\\Posts\\Posts.js":"3","C:\\Users\\Adam\\workspace\\training\\memories-mern\\client\\src\\components\\Posts\\Post\\Post.js":"4","C:\\Users\\Adam\\workspace\\training\\memories-mern\\client\\src\\styles.js":"5","C:\\Users\\Adam\\workspace\\training\\memories-mern\\client\\src\\components\\Form\\styles.js":"6","C:\\Users\\Adam\\workspace\\training\\memories-mern\\client\\src\\components\\Posts\\Post\\styles.js":"7","C:\\Users\\Adam\\workspace\\training\\memories-mern\\client\\src\\components\\Posts\\styles.js":"8","C:\\Users\\Adam\\workspace\\training\\memories-mern\\client\\src\\index.js":"9","C:\\Users\\Adam\\workspace\\training\\memories-mern\\client\\src\\reducers\\index.js":"10","C:\\Users\\Adam\\workspace\\training\\memories-mern\\client\\src\\reducers\\posts.js":"11","C:\\Users\\Adam\\workspace\\training\\memories-mern\\client\\src\\actions\\posts.js":"12","C:\\Users\\Adam\\workspace\\training\\memories-mern\\client\\src\\api\\index.js":"13"},{"size":1419,"mtime":1608499183068,"results":"14","hashOfConfig":"15"},{"size":2337,"mtime":1608487977691,"results":"16","hashOfConfig":"15"},{"size":703,"mtime":1608498080941,"results":"17","hashOfConfig":"15"},{"size":1803,"mtime":1608498816485,"results":"18","hashOfConfig":"15"},{"size":367,"mtime":1608476428325,"results":"19","hashOfConfig":"15"},{"size":447,"mtime":1608476219587,"results":"20","hashOfConfig":"15"},{"size":1013,"mtime":1608476316817,"results":"21","hashOfConfig":"15"},{"size":278,"mtime":1608476328427,"results":"22","hashOfConfig":"15"},{"size":462,"mtime":1608478910867,"results":"23","hashOfConfig":"15"},{"size":118,"mtime":1608478690599,"results":"24","hashOfConfig":"15"},{"size":273,"mtime":1608486908078,"results":"25","hashOfConfig":"15"},{"size":619,"mtime":1608486584469,"results":"26","hashOfConfig":"15"},{"size":191,"mtime":1608486334614,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"159d4eb",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"C:\\Users\\Adam\\workspace\\training\\memories-mern\\client\\src\\App.js",["58"],"import React, { useEffect } from 'react';\r\nimport { Container, AppBar, Typography, Grow, Grid } from '@material-ui/core'\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { getPosts } from './actions/posts';\r\nimport Posts from './components/Posts/Posts';\r\nimport Form from './components/Form/Form';\r\nimport memories from './images/memories.png';\r\nimport useStyles from './styles';\r\nimport \r\n\r\nconst App = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getPosts());\r\n    }, [dispatch]);\r\n    return (\r\n       <Container maxwidth=\"lg\">\r\n            <AppBar className={classes.appBar} postion=\"static\" color=\"inherit\">\r\n                <Typography className={classes.heading} variant=\"h2\" align=\"center\">Memories</Typography>\r\n                <img className={classes.image} src={memories} alt=\"memories\" height=\"60px\" />\r\n            </AppBar>\r\n            <br /><br /><br /><br /><br /><br /><br />\r\n            <Grow in>\r\n                <Grid container justify=\"space-between\" alignItems=\"stretch\" spacing={3}>\r\n                    <Grid item xs={12} sm={7}>\r\n                        <Posts />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4}>\r\n                        <Form />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grow>\r\n       </Container>\r\n    );\r\n    }\r\n export default App;   ","C:\\Users\\Adam\\workspace\\training\\memories-mern\\client\\src\\components\\Form\\Form.js",[],"C:\\Users\\Adam\\workspace\\training\\memories-mern\\client\\src\\components\\Posts\\Posts.js",[],"C:\\Users\\Adam\\workspace\\training\\memories-mern\\client\\src\\components\\Posts\\Post\\Post.js",["59","60","61","62","63"],"import React from 'react';\r\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core/';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { likePost, deletePost } from '../../../actions/posts';\r\nimport useStyles from './styles';\r\n\r\nconst Post = ({ post, setCurrentId }) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardMedia className={classes.media} image={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} title={post.title} />\r\n      <div className={classes.overlay}>\r\n        <Typography variant=\"h6\">{post.creator}</Typography>\r\n        <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\r\n      </div>\r\n      <div className={classes.overlay2}>\r\n        <Button style={{ color: 'white' }} size=\"small\" onClick={() => setCurrentId(post._id)}><MoreHorizIcon fontSize=\"default\" /></Button>\r\n      </div>\r\n      <div className={classes.details}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\r\n      </div>\r\n      <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">{post.title}</Typography>\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{post.message}</Typography>\r\n      </CardContent>\r\n      <CardActions className={classes.cardActions}>\r\n       \r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","C:\\Users\\Adam\\workspace\\training\\memories-mern\\client\\src\\styles.js",[],"C:\\Users\\Adam\\workspace\\training\\memories-mern\\client\\src\\components\\Form\\styles.js",[],"C:\\Users\\Adam\\workspace\\training\\memories-mern\\client\\src\\components\\Posts\\Post\\styles.js",[],"C:\\Users\\Adam\\workspace\\training\\memories-mern\\client\\src\\components\\Posts\\styles.js",[],"C:\\Users\\Adam\\workspace\\training\\memories-mern\\client\\src\\index.js",[],"C:\\Users\\Adam\\workspace\\training\\memories-mern\\client\\src\\reducers\\index.js",[],"C:\\Users\\Adam\\workspace\\training\\memories-mern\\client\\src\\reducers\\posts.js",["64","65"],"export default (posts = [], action) => {\r\n\r\n    switch (posts= [], action.type) {\r\n        case 'FETCH_ALL':\r\n            return action.payload;\r\n        case 'CREATE': \r\n            return [...posts, action.payload];\r\n        default: \r\n            return posts;\r\n    }\r\n}","C:\\Users\\Adam\\workspace\\training\\memories-mern\\client\\src\\actions\\posts.js",[],"C:\\Users\\Adam\\workspace\\training\\memories-mern\\client\\src\\api\\index.js",[],["66","67"],{"ruleId":null,"fatal":true,"severity":2,"message":"68","line":12,"column":1},{"ruleId":"69","severity":1,"message":"70","line":3,"column":8,"nodeType":"71","messageId":"72","endLine":3,"endColumn":22},{"ruleId":"69","severity":1,"message":"73","line":4,"column":8,"nodeType":"71","messageId":"72","endLine":4,"endColumn":18},{"ruleId":"69","severity":1,"message":"74","line":9,"column":10,"nodeType":"71","messageId":"72","endLine":9,"endColumn":18},{"ruleId":"69","severity":1,"message":"75","line":9,"column":20,"nodeType":"71","messageId":"72","endLine":9,"endColumn":30},{"ruleId":"69","severity":1,"message":"76","line":13,"column":9,"nodeType":"71","messageId":"72","endLine":13,"endColumn":17},{"ruleId":"77","severity":1,"message":"78","line":1,"column":1,"nodeType":"79","endLine":11,"endColumn":2},{"ruleId":"80","severity":1,"message":"81","line":3,"column":22,"nodeType":"82","messageId":"83","endLine":3,"endColumn":23},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},"Parsing error: Unexpected token, expected \"{\"\n\n  10 | import \n  11 | \n> 12 | const App = () => {\n     | ^\n  13 |     const classes = useStyles();\n  14 |     const dispatch = useDispatch();\n  15 |","no-unused-vars","'ThumbUpAltIcon' is defined but never used.","Identifier","unusedVar","'DeleteIcon' is defined but never used.","'likePost' is defined but never used.","'deletePost' is defined but never used.","'dispatch' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-global-assign","no-unsafe-negation"]